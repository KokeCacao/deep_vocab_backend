map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    server_name deepvocab.kokecacao.me;

    access_log /var/log/nginx/deepvocab.access.log;
    error_log /var/log/nginx/deepvocab.error.log;

    location /socket.io {
        if ($http_upgrade != "websocket") {
            return 404;
        }
        include proxy_params;
        proxy_redirect off; # The off parameter cancels the effect of the proxy_redirect directives inherited from the previous configuration level.
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://unix:/home/ubuntu/dev/deep_vocab_backend/deepvocab.sock:/socket.io;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/home/ubuntu/dev/deep_vocab_backend/deepvocab.sock;
    }

    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ssl;

    # security settings (from https://blog.miguelgrinberg.com/post/running-your-flask-application-over-https)
    # ssl_protocols TLSv1.2 TLSv1.3; # SSL is obsolete and TLS is new name of older SSL protocol as modern encryption standard using by everybody # set by /etc/letsencrypt/options-ssl-nginx.conf
    # ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA'; set by /etc/letsencrypt/options-ssl-nginx.conf
    # ssl_prefer_server_ciphers on; # https://serverfault.com/questions/997614/setting-ssl-prefer-server-ciphers-directive-in-nginx-config # set by /etc/letsencrypt/options-ssl-nginx.conf
    add_header Strict-Transport-Security max-age=15768000; # https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Strict-Transport-Security

    # other settings
    # ssl_session_timeout 1d; # set by /etc/letsencrypt/options-ssl-nginx.conf
    # ssl_session_tickets off; # set by /etc/letsencrypt/options-ssl-nginx.conf
    # ssl_session_cache shared:MozSSL:10m; # set by /etc/letsencrypt/options-ssl-nginx.conf
    ssl_stapling on; # https://datatracker.ietf.org/doc/html/rfc6066#section-8
    ssl_stapling_verify on;

    ssl_certificate /etc/letsencrypt/live/deepvocab.kokecacao.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/deepvocab.kokecacao.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = deepvocab.kokecacao.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name deepvocab.kokecacao.me;
    return 404; # managed by Certbot
}
